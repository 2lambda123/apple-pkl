// File gets rendered to .circleci/config.yml via git hook. 
amends "CircleCI.pkl"

import "jobs/BuildNativeJob.pkl"
import "jobs/GradleCheckJob.pkl"
import "jobs/DeployJob.pkl"
import "jobs/SimpleGradleJob.pkl"

version = 2.1

local buildNativeJobs: Mapping<String, BuildNativeJob> = new {
  for (_dist in List("release", "snapshot")) {
    for (_arch in List("amd64", "aarch64")) {
      ["pkl-cli-linux-\(_arch)-\(_dist)"] {
        arch = _arch 
        os = "linux"
        isRelease = _dist == "release"
      }
    }
    ["pkl-cli-macos-amd64-\(_dist)"] {
      arch = "amd64"
      os = "macOS"
      isRelease = _dist == "release"
    }
    ["pkl-cli-linux-alpine-amd64-\(_dist)"] {
      arch = "amd64"
      os = "linux"
      musl = true
      isRelease = _dist == "release"
    }
  }
}

local gradleCheckJobs: Mapping<String, GradleCheckJob> = new {
  ["gradle-check-jdk11"] {
    javaVersion = "11.0"
    isRelease = false
  }
  ["gradle-check-jdk17"] {
    javaVersion = "17.0"
    isRelease = false
  }
}

jobs {
  for (jobName, job in buildNativeJobs) {
    [jobName] = job.job
  }
  for (jobName, job in gradleCheckJobs) {
    [jobName] = job.job
  }
  ["bench"] = new SimpleGradleJob { command = "bench:jmh" }.job
  ["gradle-compatibility"] = new SimpleGradleJob {
    name = "gradle compatibility"
    command = #"""
      :pkl-gradle:build \
        :pkl-gradle:compatibilityTestReleases \
        :pkl-gradle:compatibilityTestCandidate
      """#
  }.job
  ["deploy-snapshot"] = new DeployJob { command = "publishToSonatype" }.job
  ["deploy-release"] {
    docker {
      new {
        image = "cimg/openjdk:17.0"
      }
    }
    steps {
      new RunStep {
        command = """
          echo "Fake deploy! Replace me."
          """
      }
    }
  }
  // TODO enable this and delete the dummy one
  // ["deploy-release"] = new DeployJob { command = "closeAndReleaseSonatypeStagingRepository" }.job
  ["github-release"] {
    docker {
      new {
        image = "cibuilds/github:0.10"
      }
    }
    steps {
      new AttachWorkspaceStep { at = "." }
      new RunStep {
        name = "Publish release on GitHub"
        command = #"""
          mkdir release-artifacts
          cp pkl-cli/build/executable/jpkl release-artifacts
          cp pkl-cli/build/executable/pkl-macos-amd64 release-artifacts
          cp pkl-cli/build/executable/pkl-linux-amd64 release-artifacts
          cp pkl-cli/build/executable/pkl-linux-aarch64 release-artifacts
          cp pkl-cli/build/executable/pkl-alpine-linux-amd64 release-artifacts

          ghr \
            -t ${GITHUB_TOKEN} \
            -u ${CIRCLE_PROJECT_USERNAME} \
            -r ${CIRCLE_PROJECT_REPONAME} \
            -c ${CIRCLE_SHA1} \
            ${CIRCLE_TAG}
            ./release-artifacts/
          """#
      }
    }
  }
}

local baseJobs: Listing<String> = new {
  "gradle-check-jdk11"
  "gradle-check-jdk17"
  "bench"
}

local buildAndTestJobs: Listing<String> = (baseJobs) {
  ...buildNativeJobs.keys.filter((it) -> it.endsWith("snapshot"))
}

local releaseJobs = (baseJobs) {
  ...buildNativeJobs.keys.filter((it) -> it.endsWith("release"))
}

workflows {
  ["prb"] {
    `when` {
      matches {
        pattern = "^pull/\\d+(/head)?$"
        value = "<< pipeline.git.branch >>"
      }
    }
    jobs = buildAndTestJobs
  }
  ["deploy-snapshot"] {
    `when` {
      equal { "main"; "<< pipeline.git.branch >>" }
    }
    jobs {
      ...buildAndTestJobs
      new {
        ["deploy-snapshot"] {
          requires = buildAndTestJobs
          context { "Pkl release" }
        }
      }
    }
  }
  ["deploy-release"] {
    `when` {
      matches {
        pattern = #"^\d+\.\d+\.\d+$"#
        value = "<< pipeline.git.tag >>"
      }
    }
    jobs {
      ...releaseJobs
      // do GitHub release first because we can overwrite the tag.
      // publishing to Maven Central is final.
      new {
        ["github-release"] {
          requires = releaseJobs
        }
      }
      new {
        ["deploy-release"] {
          requires { "github-release" }
          context { "Pkl release" }
        }
      }
    }
  }
}
