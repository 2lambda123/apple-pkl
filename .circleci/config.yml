version: 2.1
jobs:
  build-linux-amd64:
    steps:
    - checkout
    - restore_cache:
        key: gradle-dependencies-{{ checksum "gradle/libs.versions.toml" }}
        name: Restore Gradle Dependencies Cache
    - run:
        command: |-
          #!/usr/bin/env bash
          set -eo pipefail

          mkdir -p ~/staticdeps/bin

          # install zlib
          curl -L https://github.com/madler/zlib/releases/download/v1.2.13/zlib-1.2.13.tar.gz -o /tmp/zlib.tar.gz

          mkdir -p /tmp/dep_zlib-1.2.13 \
          && cd /tmp/dep_zlib-1.2.13 \
          && cat /tmp/zlib.tar.gz | tar --strip-components=1 -xzC . \
          && echo "zlib-1.2.13: configure..." && ./configure --static --prefix="$HOME"/staticdeps > /dev/null \
          && echo "zlib-1.2.13: make..." && make -s -j4 \
          && echo "zlib-1.2.13: make install..." && make -s install \
          && rm -rf /tmp/dep_zlib-1.2.13

          # install libstdc++ static
          sudo apt-get update
          sudo apt-get install libstdc++-10-dev
          cp /usr/lib/gcc/x86_64-linux-gnu/10/libstdc++.a ~/staticdeps

          # install musl
          curl -L https://musl.libc.org/releases/musl-1.2.2.tar.gz -o /tmp/musl.tar.gz

          mkdir -p /tmp/dep_musl-1.2.2 \
          && cd /tmp/dep_musl-1.2.2 \
          && cat /tmp/musl.tar.gz | tar --strip-components=1 -xzC . \
          && echo "musl-1.2.2: configure..." && ./configure --disable-shared --prefix="$HOME"/staticdeps > /dev/null \
          && echo "musl-1.2.2: make..." && make -s -j4 \
          && echo "musl-1.2.2: make install..." && make -s install \
          && rm -rf /tmp/dep_musl-1.2.2

          # native-image expects to find an executable at this path.
          ln -s ~/staticdeps/bin/musl-gcc ~/staticdeps/bin/x86_64-linux-musl-gcc
        name: Set up environment
    - setup_remote_docker:
        version: 20.10.14
        docker_layer_cacheing: true
    - run:
        command: |-
          export PATH=~/staticdeps/bin:$PATH
          ./gradlew --info --stacktrace '-Dorg.gradle.jvmargs=-Dfile.encoding=UTF-8 --add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED' pkl-cli:linuxExecutableAmd64
        name: gradle pkl-cli:linuxExecutableAmd64
    - save_cache:
        paths:
        - ~/.gradle/caches/modules-2/files-2.1/
        key: gradle-dependencies-{{ checksum "gradle/libs.versions.toml" }}
        name: Save Gradle Dependencies Cache
    - persist_to_workspace:
        root: '.'
        paths:
        - pkl-cli/build/executable/
    - run: cat */build/test-results/**.xml > build/test-results.xml
    - store_test_results:
        path: build/test-results.xml
    resource_class: large
    docker:
    - image: cimg/openjdk:11.0
  build-linux-arm64:
    steps:
    - checkout
    - restore_cache:
        key: gradle-dependencies-{{ checksum "gradle/libs.versions.toml" }}
        name: Restore Gradle Dependencies Cache
    - run:
        command: |-
          #!/usr/bin/env bash
          set -eo pipefail

          mkdir -p ~/staticdeps/bin

          # install zlib
          curl -L https://github.com/madler/zlib/releases/download/v1.2.13/zlib-1.2.13.tar.gz -o /tmp/zlib.tar.gz

          mkdir -p /tmp/dep_zlib-1.2.13 \
          && cd /tmp/dep_zlib-1.2.13 \
          && cat /tmp/zlib.tar.gz | tar --strip-components=1 -xzC . \
          && echo "zlib-1.2.13: configure..." && ./configure --static --prefix="$HOME"/staticdeps > /dev/null \
          && echo "zlib-1.2.13: make..." && make -s -j4 \
          && echo "zlib-1.2.13: make install..." && make -s install \
          && rm -rf /tmp/dep_zlib-1.2.13
        name: Set up environment
    - setup_remote_docker:
        version: 20.10.14
        docker_layer_cacheing: true
    - run:
        command: |-
          export PATH=~/staticdeps/bin:$PATH
          ./gradlew --info --stacktrace '-Dorg.gradle.jvmargs=-Dfile.encoding=UTF-8 --add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED' pkl-cli:linuxExecutableAarch64
        name: gradle pkl-cli:linuxExecutableAarch64
    - save_cache:
        paths:
        - ~/.gradle/caches/modules-2/files-2.1/
        key: gradle-dependencies-{{ checksum "gradle/libs.versions.toml" }}
        name: Save Gradle Dependencies Cache
    - persist_to_workspace:
        root: '.'
        paths:
        - pkl-cli/build/executable/
    - run: cat */build/test-results/**.xml > build/test-results.xml
    - store_test_results:
        path: build/test-results.xml
    resource_class: large
    docker:
    - image: cimg/openjdk:11.0
  build-linux-alpine-amd64:
    steps:
    - checkout
    - restore_cache:
        key: gradle-dependencies-{{ checksum "gradle/libs.versions.toml" }}
        name: Restore Gradle Dependencies Cache
    - run:
        command: |-
          #!/usr/bin/env bash
          set -eo pipefail

          mkdir -p ~/staticdeps/bin

          # install zlib
          curl -L https://github.com/madler/zlib/releases/download/v1.2.13/zlib-1.2.13.tar.gz -o /tmp/zlib.tar.gz

          mkdir -p /tmp/dep_zlib-1.2.13 \
          && cd /tmp/dep_zlib-1.2.13 \
          && cat /tmp/zlib.tar.gz | tar --strip-components=1 -xzC . \
          && echo "zlib-1.2.13: configure..." && ./configure --static --prefix="$HOME"/staticdeps > /dev/null \
          && echo "zlib-1.2.13: make..." && make -s -j4 \
          && echo "zlib-1.2.13: make install..." && make -s install \
          && rm -rf /tmp/dep_zlib-1.2.13
        name: Set up environment
    - setup_remote_docker:
        version: 20.10.14
        docker_layer_cacheing: true
    - run:
        command: |-
          export PATH=~/staticdeps/bin:$PATH
          ./gradlew --info --stacktrace '-Dorg.gradle.jvmargs=-Dfile.encoding=UTF-8 --add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED' pkl-cli:alpineExecutableAmd64
        name: gradle pkl-cli:alpineExecutableAmd64
    - save_cache:
        paths:
        - ~/.gradle/caches/modules-2/files-2.1/
        key: gradle-dependencies-{{ checksum "gradle/libs.versions.toml" }}
        name: Save Gradle Dependencies Cache
    - persist_to_workspace:
        root: '.'
        paths:
        - pkl-cli/build/executable/
    - run: cat */build/test-results/**.xml > build/test-results.xml
    - store_test_results:
        path: build/test-results.xml
    resource_class: large
    docker:
    - image: cimg/openjdk:11.0
  build-macos-amd64:
    steps:
    - checkout
    - restore_cache:
        key: gradle-dependencies-{{ checksum "gradle/libs.versions.toml" }}
        name: Restore Gradle Dependencies Cache
    - run:
        command: |-
          export PATH=~/staticdeps/bin:$PATH
          ./gradlew --info --stacktrace '-Dorg.gradle.jvmargs=-Dfile.encoding=UTF-8 --add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED' buildNative
        name: gradle buildNative
    - save_cache:
        paths:
        - ~/.gradle/caches/modules-2/files-2.1/
        key: gradle-dependencies-{{ checksum "gradle/libs.versions.toml" }}
        name: Save Gradle Dependencies Cache
    - persist_to_workspace:
        root: '.'
        paths:
        - pkl-cli/build/executable/
    macos:
      xcode: 14.0.0
workflows:
  build-native-images:
    jobs:
    - build-linux-alpine-amd64:
        filters:
          branches:
            only: main
