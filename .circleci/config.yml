version: 2.1
jobs:
  build-ubuntu-amd64:
    steps:
    - checkout
    - restore_cache:
        key: gradle-dependencies-{{ checksum "gradle/libs.versions.toml" }}
        name: Restore Gradle Dependencies Cache
    - run:
        command: |2-
            #!/usr/bin/env bash
            set -eo pipefail

            # install jdk
            curl -L \
              https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.20.1%2B1/OpenJDK11U-jdk_x64_linux_hotspot_11.0.20.1_1.tar.gz -o /tmp/jdk.tar.gz

            tar tf /tmp/jdk.tar.gz
            mkdir ~/jdk \
            && cd ~/jdk \
            && cat /tmp/jdk.tar.gz | tar --strip-components=1 -xzC .

            mkdir -p ~/staticdeps/bin

          # install musl
          curl -L https://musl.libc.org/releases/musl-1.2.2.tar.gz -o /tmp/musl.tar.gz

          mkdir -p /tmp/dep_musl-1.2.2 \
          && cd /tmp/dep_musl-1.2.2 \
          && cat /tmp/musl.tar.gz | tar --strip-components=1 -xzC . \
          && echo "musl-1.2.2: configure..." && ./configure --disable-shared --prefix=~/staticdeps > /dev/null \
          && echo "musl-1.2.2: make..." && make -s -j4 \
          && echo "musl-1.2.2: make install..." && make -s install \
          && rm -rf /tmp/dep_musl-1.2.2

          # native-image expects to find an executable at this path.
          ln -s ~/staticdeps/bin/musl-gcc ~/staticdeps/bin/x86_64-linux-musl-gcc
        name: Set up environment
    - run:
        command: |-
          export PATH=/staticdeps/bin:$PATH
          export JAVA_HOME=~/jdk
          ./gradlew --info --stacktrace '-Dorg.gradle.jvmargs=-Dfile.encoding=UTF-8 --add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED' buildNative
        name: gradle buildNative
    - save_cache:
        paths:
        - ~/.gradle/caches/modules-2/files-2.1/
        key: gradle-dependencies-{{ checksum "gradle/libs.versions.toml" }}
        name: Save Gradle Dependencies Cache
    - persist_to_workspace:
        root: '.'
        paths:
        - pkl-cli/build/executable/
    resource_class: medium
    machine:
      image: ubuntu-2204:current
  build-ubuntu-arm64:
    steps:
    - checkout
    - restore_cache:
        key: gradle-dependencies-{{ checksum "gradle/libs.versions.toml" }}
        name: Restore Gradle Dependencies Cache
    - run:
        command: |2-
            #!/usr/bin/env bash
            set -eo pipefail

            # install jdk
            curl -L \
              https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.20.1%2B1/OpenJDK11U-jdk_aarch64_linux_hotspot_11.0.20.1_1.tar.gz -o /tmp/jdk.tar.gz

            tar tf /tmp/jdk.tar.gz
            mkdir ~/jdk \
            && cd ~/jdk \
            && cat /tmp/jdk.tar.gz | tar --strip-components=1 -xzC .

            mkdir -p ~/staticdeps/bin
        name: Set up environment
    - run:
        command: |-
          export PATH=/staticdeps/bin:$PATH
          export JAVA_HOME=~/jdk
          ./gradlew --info --stacktrace '-Dorg.gradle.jvmargs=-Dfile.encoding=UTF-8 --add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED --add-exports jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED' buildNative
        name: gradle buildNative
    - save_cache:
        paths:
        - ~/.gradle/caches/modules-2/files-2.1/
        key: gradle-dependencies-{{ checksum "gradle/libs.versions.toml" }}
        name: Save Gradle Dependencies Cache
    - persist_to_workspace:
        root: '.'
        paths:
        - pkl-cli/build/executable/
    resource_class: arm.medium
    machine:
      image: ubuntu-2204:current
workflows:
  build-native-images:
    jobs:
    - build-ubuntu-arm64:
        filters:
          branches:
            only: main
    - build-ubuntu-amd64:
        filters:
          branches:
            only: main
